from typing import Collection

from src.database import PlayerScore
from src.messages.user.games.creatable_game_messages_base import CreatableGamesMessages
from src.misc.enums import BaccaratBettingOption


class BaccaratMessages(CreatableGamesMessages):
    @staticmethod
    def get_game_created(game_number: int):
        return f'üé¥ –ò–≥—Ä–∞ Baccarat ‚Ññ{game_number} —Å–æ–∑–¥–∞–Ω–∞!'

    @staticmethod
    def get_category_description(player_name: str) -> str:
        return 'üé¥ Baccarat'

    @staticmethod
    def ask_for_bet_amount(player_name: str) -> str:
        return None

    @staticmethod
    def get_bet_prompt() -> str:
        return '–í—ã–±–µ—Ä–∏—Ç–µ, –Ω–∞ —á—å—é –ø–æ–±–µ–¥—É —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å—Ç–∞–≤–∏—Ç—å:'

    @staticmethod
    async def get_baccarat_results(bet_choices: Collection[PlayerScore]):
        text = '–†–µ–∑—É–ª—å—Ç–∞—Ç—ã \n\n'
        for choice in bet_choices:
            text += f'{await choice.player.get()} ‚Äî '
            match choice.value:
                case BaccaratBettingOption.PLAYER.value:
                    text += '–∏–≥—Ä–æ–∫ \n'
                case BaccaratBettingOption.BANKER.value:
                    text += '–±–∞–Ω–∫–∏—Ä \n'
                case BaccaratBettingOption.TIE.value:
                    text += '–Ω–∏—á—å—è \n'
                case _:
                    text += '–ø—Ä–æ–ø—É—Å—Ç–∏–ª —Ö–æ–¥'
        return text
