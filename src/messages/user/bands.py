from decimal import Decimal

from aiogram import html

from settings import Config
from src.database.models import Band, User
from src.misc.enums.leagues import BandLeague
from src.utils.text_utils import format_float_to_rub_string, get_emoji_number


class BandsMessages:

    @staticmethod
    def get_bands_menu() -> str:
        return (
            '–ú—ã –ø–æ–∑–∞–±–æ—Ç–∏–ª–∏—Å—å –æ —Ç–≤–æ—ë–º –∫–æ–º—Ñ–æ—Ä—Ç–µ –≤–æ –≤—Ä–µ–º—è –∏–≥—Ä—ã ‚Äî –ª–æ–≤–∏ '
            '<a href="https://telegra.ph/Azartnyj-gorod-BarredLand-i-kak-tut-vsyo-ustroeno-01-08">–∫—Ä–∞—Ç–∫—É—é —Å–≤–æ–¥–∫—É</a> '
            '–æ —Ç–æ–º, –∫–∞–∫ –≤—Å—ë —Ç—É—Ç —É—Å—Ç—Ä–æ–µ–Ω–æ. \n\n'
            '1‚É£ –í –≥–æ—Ä–æ–¥–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç —Å–∏—Å—Ç–µ–º–∞ –õ–∏–≥ ‚Äî  —Ç—ã –≤–º–µ—Å—Ç–µ —Å–æ —Å–≤–æ–µ–π –ë–∞–Ω–¥–æ–π –ø–æ–¥–Ω–∏–º–∞–µ—à—å—Å—è '
            '–≤–≤–µ—Ä—Ö, –≥–¥–µ –≤–∞—Å –∂–¥—É—Ç —Ü–µ–Ω–Ω—ã–µ –ø—Ä–∏–∑—ã –∏ –±–æ–π —Å DICY \n\n'
            '2‚É£ –¢—ã –º–æ–∂–µ—à—å –æ—Å–Ω–æ–≤–∞—Ç—å —Å–≤–æ—é –±–∞–Ω–¥—É, –ª–∏–±–æ –ø—Ä–∏–º–∫–Ω—É—Ç—å –∫ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–º \n\n'
            '3‚É£ –¢—ã –º–æ–∂–µ—à—å –æ—Ç–∫—Ä—ã—Ç—å –ö–∞—Ä—Ç—É –ì–æ—Ä–æ–¥–∞, –≥–¥–µ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç—Å—è –∫–∞–∂–¥—ã–π –µ–≥–æ —Ä–∞–π–æ–Ω –∏ –±–∞–Ω–¥—ã –≤ –Ω√´–º ‚Äî '
            '–ù–∞–∂–∏–º–∞–π –Ω–∞ –ì–æ—Ä–æ–¥ -> –ú–æ–Ω–æ–ø–æ–ª–∏—Å—Ç—ã \n\n'
            '–û–¥–∏–Ω, –¥–≤–∞, —Ç—Ä–∏ ‚Äî —Ç—ã —É–∂–µ –≤ –ø—É—Ç–∏. –ö –∑–∞–≤–æ–µ–≤–∞–Ω–∏—é —Ç–∏—Ç—É–ª–∞ –ö–æ—Ä–æ–ª—è –ê–∑–∞—Ä—Ç–∞'
        )

    @staticmethod
    def get_city_description() -> str:
        return (
            'üó∫ –ö–∞—Ä—Ç–∞ –≥–æ—Ä–æ–¥–∞ <b>BarredLand</b> \n\n'
            '‚ùï–í –∫–∞–∂–¥–æ–π –õ–∏–≥–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –Ω–µ –º–µ–Ω–µ–µ —à–µ—Å—Ç–∏ –±–∞–Ω–¥ –¥–ª—è —Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è —É—á–∞—Å—Ç–∫–æ–≤. '
            '–ï—Å–ª–∏ –∏—Ö –º–µ–Ω—å—à–µ ‚Äî —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é –∑–∞–Ω–∏–º–∞–µ—Ç –ò–≥—Ä–æ–∫ ¬´–ù¬ª'
        )

    @staticmethod
    def get_league_map_description(league: BandLeague, band_names: list[str]):
        text = f"<b>–õ–∏–≥–∞ {league} –∏ 6 –ë–∞–Ω–¥, –∑–∞–Ω—è–≤—à–∏—Ö –Ω–∞ –Ω–µ–π —Ç–µ—Ä—Ä–∏—Ç–æ—Ä–∏—é</b>"

        list_len = 6
        band_names = band_names[:list_len] + ['–ú–∏—Å—Ç–µ—Ä –ù']*(list_len-len(band_names))
        enumerated_band_names = [
            f"{get_emoji_number(n)} {html.quote(band_name)}"
            for n, band_name in enumerate(band_names, start=1)
        ]
        band_names_text = "\n".join(enumerated_band_names)

        return f"{text} \n\n{band_names_text}"

    @classmethod
    def get_band_description(cls, band: Band, band_creator: User, members_scores: list[tuple[User, float | Decimal]]) -> str:
        members_text = f'ü´Ç –£—á–∞—Å—Ç–Ω–∏–∫–∏: ({len(members_scores)}/{Config.Bands.BAND_MEMBERS_LIMIT})'
        members_list = "\n".join(
            f"{n}) {member[0]} ‚Äî {format_float_to_rub_string(member[1])}"
            for n, member in enumerate(members_scores, start=1)
        )

        return (
            f'<b>–ë–∞–Ω–¥–∞ "{html.quote(band.title)}"</b> \n\n'
            f'üëë –ì–ª–∞–≤–∞—Ä—å: {band_creator} \n'
            f'üìà –†–∞–Ω–≥: {band.league} \n'
            f'üí∞ –û–±—â–∞–∫: {format_float_to_rub_string(band.score)} \n\n'
            f'{members_text} \n{members_list}'
        )

    @classmethod
    def get_ask_for_join_band(cls, band: Band, band_creator: User, members_scores) -> str:
        band_description = cls.get_band_description(band=band, band_creator=band_creator, members_scores=members_scores)
        return f'–•–æ—Ç–∏—Ç–µ –ª–∏ –≤—ã –≤—Å—Ç—É–ø–∏—Ç—å –≤ —ç—Ç—É –±–∞–Ω–¥—É? \n\n{band_description}'

    @staticmethod
    def ask_for_member_to_kick() -> str:
        return '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ —Ö–æ—Ç–∏—Ç–µ –∏—Å–∫–ª—é—á–∏—Ç—å:'

    @staticmethod
    def get_bands_menu_photo() -> str:
        return 'https://telegra.ph/file/3d5b3f9088dba0e0c39b1.png'

    @staticmethod
    def get_global_map_photo() -> str:
        return 'https://telegra.ph/file/0f6ba0c9f77dc865169a5.png'
